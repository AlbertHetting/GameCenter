.GuideBackground {
  margin: 0;
  display: flex; /* flex */
  flex-direction: column; /* flex-col */
  height: 100vh; /* h-screen */
  width: 100vw; /* w-screen */
  justify-content: space-around; /* justify-around */
  align-items: center; /* items-center */

  background-image: url("/img/Background1.png"); /* bg-[url(...)] */
  background-size: cover; /* bg-cover */
  background-position: center; /* bg-center */
  background-repeat: no-repeat;
}

.browse-background {
  margin: 0;
  display: flex; /* flex */
  flex-direction: column; /* flex-col */
  min-height: 100vh;
  width: 100vw; /* w-screen */
  justify-content: space-around; /* justify-around */
  align-items: center; /* items-center */

  background-image: url("/img/Background1.png"); /* bg-[url(...)] */
  background-size: cover; /* bg-cover */
  background-position: center; /* bg-center */
  background-repeat: no-repeat;
  background-attachment: fixed;
}

.conceptheader {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.conceptcon {
  margin-top: -3rem;
}

.Concept {
  max-width: 20rem;
}

.textcon h1 {
  font-size: 23px;
  font-style: italic;
  font-weight: 400;
  font-family: "Inter", sans-serif;
  color: white;
  max-width: 17rem;
  text-align: center;
}

.textcon {
  display: flex;
  justify-content: center;
  align-items: center;
}

.circle1 {
  width: 4rem;
  height: 4rem;
  background-color: white;
  border-radius: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.circle1 h2 {
  font-size: 52px;
  font-family: "Inter", sans-serif;
  color: black;
  font-weight: 800;
}

.step1 {
  width: 15.5rem;
  height: 4.4rem;
  background-color: white;
  border-radius: 13px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.step1 h3 {
  font-size: 20px;
  font-family: "Inter", sans-serif;
  text-align: center;
  font-weight: 900;
  max-width: 14rem;
}

.numberrule {
  margin-top: 2.3rem;
  display: flex;
  justify-content: center;
  gap: 2rem;
}

.rulecontainer {
  margin-top: 2rem;
}

.continuecon {
  display: flex;
  justify-content: center;
}

.continuebutton {
  position: relative;
  margin-top: 2.3rem;
  height: 3.5rem;
  width: 14rem;
  border-radius: 13px;
  display: flex;
  justify-content: center;
  align-items: center;

  /* no background and no mix-blend-mode here */
}

/* background layer that blends */
.continuebutton::before {
  content: "";
  position: absolute;
  inset: 0; /* top/right/bottom/left: 0 */
  border-radius: inherit;
  background: black;
  mix-blend-mode: overlay; /* only this layer blends */
  z-index: 0;
  pointer-events: none; /* clicks go through */
}

/* text stays normal, above the blended layer */
.continuebutton > * {
  position: relative;
  z-index: 1;
}

.continuebutton h4 {
  color: white;
  font-family: "Inter", sans-serif;
  font-size: 30px;
  text-decoration: none;
}

/* ===== Reveal-on-load (no JS) ===== */
:root {
  --reveal-distance: -25px;
  --reveal-duration: 0.5s;
  --stagger-step: 120ms; /* tweak as you like */
}

@keyframes fadeDownIn {
  from {
    opacity: 0;
    transform: translateY(var(--reveal-distance));
  }
  to {
    opacity: 1;
    transform: none;
  }
}

/* Option A: generic "great-grandchildren" selector */
.program-icons.reveal > * > * > * > * {
  opacity: 0;
  animation: fadeDownIn var(--reveal-duration) ease forwards;
  will-change: opacity, transform;
}

.program-icons.reveal > section > .rulecontainer > .numberrule {
  opacity: 0;
  animation: fadeDownIn var(--reveal-duration) ease forwards;
}

/* Stagger delays for the rule items (1..9, adjust as needed) */
.program-icons.reveal.stagger
  > section
  > .rulecontainer
  > .numberrule:nth-child(1) {
  animation-delay: calc(0 * var(--stagger-step));
}
.program-icons.reveal.stagger
  > section
  > .rulecontainer
  > .numberrule:nth-child(2) {
  animation-delay: calc(1 * var(--stagger-step));
}
.program-icons.reveal.stagger
  > section
  > .rulecontainer
  > .numberrule:nth-child(3) {
  animation-delay: calc(2 * var(--stagger-step));
}
.program-icons.reveal.stagger
  > section
  > .rulecontainer
  > .numberrule:nth-child(4) {
  animation-delay: calc(3 * var(--stagger-step));
}
